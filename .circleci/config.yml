# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/configuration-reference/#executor-job
    docker:
      - image: sonarsource/sonar-scanner-cli:latest
    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: Analyze on SonarQube
          command: |
            echo "URL ${CIRCLE_PULL_REQUEST}"
            if [ -z "${CIRCLE_PULL_REQUEST}" ]; then
              echo "Non-PR Build Detected. Running analysis on ${CIRCLE_BRANCH}"
              sonar-scanner -Dsonar.login=${SONAR_TOKEN} -Dsonar.projectKey=circle-ci-sonar-training-app -Dsonar.host.url=https://sonarcloud.io -Dsonar.branch.name=$GITHUB_REF_NAME
              exit 0
            fi
            # jq needed to get the target branch name
            npm install node-jq --save
            echo "PR branch ${CIRCLE_BRANCH}"
            echo "Repo name ${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}"
            echo "URL ${CIRCLE_PULL_REQUEST}"
            export PR_NUM=`echo ${CIRCLE_PULL_REQUEST} | cut -d'/' -f7`
            echo "PR number ${PR_NUM}"
            export BASE_BRANCH_URL="https://api.github.com/repos/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/pulls/${PR_NUM}"
            export TARGET_BRANCH=$(curl "$BASE_BRANCH_URL" | jq '.base.ref' | tr -d '"') 
            echo "Target Branch = ${TARGET_BRANCH}"
            sonar-scanner -Dsonar.login=${SONAR_TOKEN} -Dsonar.projectKey=circle-ci-sonar-training-app -Dsonar.pullrequest.base=${TARGET_BRANCH} -Dsonar.pullrequest.branch=${CIRCLE_BRANCH} -Dsonar.pullrequest.key=${PR_NUM}

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - say-hello
